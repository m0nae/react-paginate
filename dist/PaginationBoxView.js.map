{"version":3,"sources":["../react_components/PaginationBoxView.js"],"names":["customComponentIsRequired","props","propName","componentName","prop","PropTypes","element","console","error","PaginationBoxView","handlePreviousPage","selected","state","evt","preventDefault","returnValue","handlePageSelected","handleNextPage","pageCount","setState","callCallback","handleBreakClick","index","getForwardJump","getBackwardJump","onPageChange","selectedItem","pagination","items","pageRangeDisplayed","marginPagesDisplayed","breakLabel","breakClassName","breakLinkClassName","styledBreakListOption","styledBreakLink","push","getPageElement","leftSide","rightSide","page","breakView","createPageView","length","bind","initialSelected","initialPage","forcePage","disableInitialCallback","extraAriaContext","warn","prevProps","forwardJump","backwardJump","pageIndex","hrefBuilder","ariaLabelBuilder","label","pageClassName","pageLinkClassName","activeClassName","activeLinkClassName","customPage","customPageLink","disabledClassName","previousClassName","nextClassName","containerClassName","previousLinkClassName","previousLabel","nextLinkClassName","nextLabel","customContainer","customPreviousButton","customPreviousLink","customNextButton","customNextLink","CustomContainer","CustomPreviousButton","CustomPreviousLink","CustomNextButton","CustomNextLink","previousClasses","nextClasses","previousAriaDisabled","nextAriaDisabled","Component","propTypes","number","isRequired","node","oneOfType","string","func","bool","arguments","defaultProps"],"mappings":"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","file":"PaginationBoxView.js","sourcesContent":["'use strict';\r\n\r\nimport React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport PageView from './PageView';\r\nimport BreakView from './BreakView';\r\nimport StyledBreakView from './StyledBreakView';\r\n\r\nfunction customComponentIsRequired(props, propName, componentName, prop) {\r\n  if (props[prop] && props[propName] !== PropTypes.element) {\r\n    console.error(`A ${propName} component is required`);\r\n  }\r\n}\r\nexport default class PaginationBoxView extends Component {\r\n\r\n  static propTypes = {\r\n    pageCount: PropTypes.number.isRequired,\r\n    pageRangeDisplayed: PropTypes.number.isRequired,\r\n    marginPagesDisplayed: PropTypes.number.isRequired,\r\n    previousLabel: PropTypes.node,\r\n    nextLabel: PropTypes.node,\r\n    breakLabel: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\r\n    hrefBuilder: PropTypes.func,\r\n    onPageChange: PropTypes.func,\r\n    initialPage: PropTypes.number,\r\n    forcePage: PropTypes.number,\r\n    disableInitialCallback: PropTypes.bool,\r\n    containerClassName: PropTypes.string,\r\n    pageClassName: PropTypes.string,\r\n    pageLinkClassName: PropTypes.string,\r\n    activeClassName: PropTypes.string,\r\n    activeLinkClassName: PropTypes.string,\r\n    previousClassName: PropTypes.string,\r\n    nextClassName: PropTypes.string,\r\n    previousLinkClassName: PropTypes.string,\r\n    nextLinkClassName: PropTypes.string,\r\n    disabledClassName: PropTypes.string,\r\n    breakClassName: PropTypes.string,\r\n    breakLinkClassName: PropTypes.string,\r\n    extraAriaContext: PropTypes.string,\r\n    ariaLabelBuilder: PropTypes.func,\r\n    customPage: PropTypes.element,\r\n    customPageLink: function(props, propName, componentName) {\r\n      customComponentIsRequired(arguments, 'customPage')\r\n    },\r\n    customContainer: function(props, propName, componentName) {\r\n      customComponentIsRequired(arguments, 'customPage')\r\n    },\r\n    customPreviousButton: function(props, propName, componentName) {\r\n      customComponentIsRequired(arguments, 'customPage')\r\n    },\r\n    customPreviousLink: function(props, propName, componentName) {\r\n      customComponentIsRequired(arguments, 'customPage')\r\n    },\r\n    customNextButton: function(props, propName, componentName) {\r\n      customComponentIsRequired(arguments, 'customPage')\r\n    },\r\n    customNextLink: function(props, propName, componentName) {\r\n      customComponentIsRequired(arguments, 'customPage')\r\n    },\r\n    customPreviousLink: function(props, propName, componentName) {\r\n      customComponentIsRequired(arguments, 'customPage')\r\n    },\r\n    styledBreakListOption: function(props, propName, componentName) {\r\n      customComponentIsRequired(arguments, 'customPage')\r\n    },\r\n    styledBreakLink: function(props, propName, componentName) {\r\n      customComponentIsRequired(arguments, 'customPage')\r\n    }\r\n  };\r\n\r\n  static defaultProps = {\r\n    pageCount: 10,\r\n    pageRangeDisplayed: 2,\r\n    marginPagesDisplayed: 3,\r\n    activeClassName: 'selected',\r\n    previousClassName: 'previous',\r\n    nextClassName: 'next',\r\n    previousLabel: 'Previous',\r\n    nextLabel: 'Next',\r\n    breakLabel: '...',\r\n    disabledClassName: 'disabled',\r\n    disableInitialCallback: false,\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    let initialSelected;\r\n    if (props.initialPage) {\r\n      initialSelected = props.initialPage;\r\n    } else if (props.forcePage) {\r\n      initialSelected = props.forcePage;\r\n    } else {\r\n      initialSelected = 0;\r\n    }\r\n\r\n    this.state = {\r\n      selected: initialSelected,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const {\r\n      initialPage,\r\n      disableInitialCallback,\r\n      extraAriaContext,\r\n    } = this.props;\r\n    // Call the callback with the initialPage item:\r\n    if (typeof initialPage !== 'undefined' && !disableInitialCallback) {\r\n      this.callCallback(initialPage);\r\n    }\r\n\r\n    if (extraAriaContext) {\r\n      console.warn(\r\n        'DEPRECATED (react-paginate): The extraAriaContext prop is deprecated. You should now use the ariaLabelBuilder instead.'\r\n      );\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (\r\n      typeof this.props.forcePage !== 'undefined' &&\r\n      this.props.forcePage !== prevProps.forcePage\r\n    ) {\r\n      this.setState({ selected: this.props.forcePage });\r\n    }\r\n  }\r\n\r\n  handlePreviousPage = evt => {\r\n    const { selected } = this.state;\r\n    evt.preventDefault ? evt.preventDefault() : (evt.returnValue = false);\r\n    if (selected > 0) {\r\n      this.handlePageSelected(selected - 1, evt);\r\n    }\r\n  };\r\n\r\n  handleNextPage = evt => {\r\n    const { selected } = this.state;\r\n    const { pageCount } = this.props;\r\n\r\n    evt.preventDefault ? evt.preventDefault() : (evt.returnValue = false);\r\n    if (selected < pageCount - 1) {\r\n      this.handlePageSelected(selected + 1, evt);\r\n    }\r\n  };\r\n\r\n  handlePageSelected = (selected, evt) => {\r\n    evt.preventDefault ? evt.preventDefault() : (evt.returnValue = false);\r\n\r\n    if (this.state.selected === selected) return;\r\n\r\n    this.setState({ selected: selected });\r\n\r\n    // Call the callback with the new selected item:\r\n    this.callCallback(selected);\r\n  };\r\n\r\n  getForwardJump() {\r\n    const { selected } = this.state;\r\n    const { pageCount, pageRangeDisplayed } = this.props;\r\n\r\n    const forwardJump = selected + pageRangeDisplayed;\r\n    return forwardJump >= pageCount ? pageCount - 1 : forwardJump;\r\n  }\r\n\r\n  getBackwardJump() {\r\n    const { selected } = this.state;\r\n    const { pageRangeDisplayed } = this.props;\r\n\r\n    const backwardJump = selected - pageRangeDisplayed;\r\n    return backwardJump < 0 ? 0 : backwardJump;\r\n  }\r\n\r\n  handleBreakClick = (index, evt) => {\r\n    evt.preventDefault ? evt.preventDefault() : (evt.returnValue = false);\r\n\r\n    const { selected } = this.state;\r\n\r\n    this.handlePageSelected(\r\n      selected < index ? this.getForwardJump() : this.getBackwardJump(),\r\n      evt\r\n    );\r\n  };\r\n\r\n  hrefBuilder(pageIndex) {\r\n    const { hrefBuilder, pageCount } = this.props;\r\n    if (\r\n      hrefBuilder &&\r\n      pageIndex !== this.state.selected &&\r\n      pageIndex >= 0 &&\r\n      pageIndex < pageCount\r\n    ) {\r\n      return hrefBuilder(pageIndex + 1);\r\n    }\r\n  }\r\n\r\n  ariaLabelBuilder(pageIndex) {\r\n    const selected = pageIndex === this.state.selected;\r\n    if (\r\n      this.props.ariaLabelBuilder &&\r\n      pageIndex >= 0 &&\r\n      pageIndex < this.props.pageCount\r\n    ) {\r\n      let label = this.props.ariaLabelBuilder(pageIndex + 1, selected);\r\n      // DEPRECATED: The extraAriaContext prop was used to add additional context\r\n      // to the aria-label. Users should now use the ariaLabelBuilder instead.\r\n      if (this.props.extraAriaContext && !selected) {\r\n        label = label + ' ' + this.props.extraAriaContext;\r\n      }\r\n      return label;\r\n    }\r\n  }\r\n\r\n  callCallback = selectedItem => {\r\n    if (\r\n      typeof this.props.onPageChange !== 'undefined' &&\r\n      typeof this.props.onPageChange === 'function'\r\n    ) {\r\n      this.props.onPageChange({ selected: selectedItem });\r\n    }\r\n  };\r\n\r\n  getPageElement(index) {\r\n    const { selected } = this.state;\r\n    const {\r\n      pageClassName,\r\n      pageLinkClassName,\r\n      activeClassName,\r\n      activeLinkClassName,\r\n      extraAriaContext,\r\n      customPage,\r\n      customPageLink\r\n    } = this.props;\r\n\r\n    return (\r\n      <PageView\r\n      customPage={customPage}\r\n      customPageLink={customPageLink}\r\n        key={index}\r\n        onClick={this.handlePageSelected.bind(null, index)}\r\n        selected={selected === index}\r\n        pageClassName={pageClassName}\r\n        pageLinkClassName={pageLinkClassName}\r\n        activeClassName={activeClassName}\r\n        activeLinkClassName={activeLinkClassName}\r\n        extraAriaContext={extraAriaContext}\r\n        href={this.hrefBuilder(index)}\r\n        ariaLabel={this.ariaLabelBuilder(index)}\r\n        page={index + 1}\r\n      />\r\n    );\r\n  }\r\n\r\n  pagination = () => {\r\n    const items = [];\r\n    const {\r\n      pageRangeDisplayed,\r\n      pageCount,\r\n      marginPagesDisplayed,\r\n      breakLabel,\r\n      breakClassName,\r\n      breakLinkClassName,\r\n      styledBreakListOption,\r\n      styledBreakLink\r\n    } = this.props;\r\n\r\n    const { selected } = this.state;\r\n\r\n    if (pageCount <= pageRangeDisplayed) {\r\n      for (let index = 0; index < pageCount; index++) {\r\n        items.push(this.getPageElement(index));\r\n      }\r\n    } else {\r\n      let leftSide = pageRangeDisplayed / 2;\r\n      let rightSide = pageRangeDisplayed - leftSide;\r\n\r\n      // If the selected page index is on the default right side of the pagination,\r\n      // we consider that the new right side is made up of it (= only one break element).\r\n      // If the selected page index is on the default left side of the pagination,\r\n      // we consider that the new left side is made up of it (= only one break element).\r\n      if (selected > pageCount - pageRangeDisplayed / 2) {\r\n        rightSide = pageCount - selected;\r\n        leftSide = pageRangeDisplayed - rightSide;\r\n      } else if (selected < pageRangeDisplayed / 2) {\r\n        leftSide = selected;\r\n        rightSide = pageRangeDisplayed - leftSide;\r\n      }\r\n\r\n      let index;\r\n      let page;\r\n      let breakView;\r\n      let createPageView = index => this.getPageElement(index);\r\n\r\n      for (index = 0; index < pageCount; index++) {\r\n        page = index + 1;\r\n\r\n        // If the page index is lower than the margin defined,\r\n        // the page has to be displayed on the left side of\r\n        // the pagination.\r\n        if (page <= marginPagesDisplayed) {\r\n          items.push(createPageView(index));\r\n          continue;\r\n        }\r\n\r\n        // If the page index is greater than the page count\r\n        // minus the margin defined, the page has to be\r\n        // displayed on the right side of the pagination.\r\n        if (page > pageCount - marginPagesDisplayed) {\r\n          items.push(createPageView(index));\r\n          continue;\r\n        }\r\n\r\n        // If the page index is near the selected page index\r\n        // and inside the defined range (pageRangeDisplayed)\r\n        // we have to display it (it will create the center\r\n        // part of the pagination).\r\n        if (index >= selected - leftSide && index <= selected + rightSide) {\r\n          items.push(createPageView(index));\r\n          continue;\r\n        }\r\n\r\n        // If the page index doesn't meet any of the conditions above,\r\n        // we check if the last item of the current \"items\" array\r\n        // is a break element. If not, we add a break element, else,\r\n        // we do nothing (because we don't want to display the page).\r\n        if (styledBreakListOption && styledBreakLink) {\r\n          if (breakLabel && items[items.length - 1] !== breakView) {\r\n            breakView = (\r\n              <StyledBreakView\r\n                key={index}\r\n                styledBreakListOption={styledBreakListOption}\r\n                styledBreakLink={styledBreakLink}\r\n                breakLabel={breakLabel}\r\n                onClick={this.handleBreakClick.bind(null, index)}\r\n              />\r\n            );\r\n            items.push(breakView);\r\n          }\r\n        } else {\r\n          if (breakLabel && items[items.length - 1] !== breakView) {\r\n            breakView = (\r\n              <BreakView\r\n                key={index}\r\n                breakLabel={breakLabel}\r\n                breakClassName={breakClassName}\r\n                breakLinkClassName={breakLinkClassName}\r\n                onClick={this.handleBreakClick.bind(null, index)}\r\n              />\r\n            );\r\n            items.push(breakView);\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return items;\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      disabledClassName,\r\n      previousClassName,\r\n      nextClassName,\r\n      pageCount,\r\n      containerClassName,\r\n      previousLinkClassName,\r\n      previousLabel,\r\n      nextLinkClassName,\r\n      nextLabel,\r\n      customContainer,\r\n      customPreviousButton,\r\n      customPreviousLink,\r\n      customNextButton,\r\n      customNextLink\r\n    } = this.props;\r\n\r\n    let CustomContainer = customContainer;\r\n    let CustomPreviousButton = customPreviousButton;\r\n    let CustomPreviousLink = customPreviousLink;\r\n    let CustomNextButton = customNextButton;\r\n    let CustomNextLink = customNextLink;\r\n\r\n    const { selected } = this.state;\r\n\r\n    const previousClasses =\r\n      previousClassName + (selected === 0 ? ` ${disabledClassName}` : '');\r\n    const nextClasses =\r\n      nextClassName +\r\n      (selected === pageCount - 1 ? ` ${disabledClassName}` : '');\r\n\r\n    const previousAriaDisabled = selected === 0 ? 'true' : 'false';\r\n    const nextAriaDisabled = selected === pageCount - 1 ? 'true' : 'false';\r\n\r\n    return (\r\n      customContainer ? \r\n      <CustomContainer>\r\n        <CustomPreviousButton>\r\n          <CustomPreviousLink\r\n            onClick={this.handlePreviousPage}\r\n            href={this.hrefBuilder(selected - 1)}\r\n            tabIndex=\"0\"\r\n            role=\"button\"\r\n            onKeyPress={this.handlePreviousPage}\r\n            aria-disabled={previousAriaDisabled}\r\n          >\r\n            {previousLabel}\r\n          </CustomPreviousLink>\r\n        </CustomPreviousButton>\r\n\r\n        {this.pagination()}\r\n\r\n        <CustomNextButton>\r\n          <CustomNextLink\r\n            onClick={this.handleNextPage}\r\n            className={nextLinkClassName}\r\n            href={this.hrefBuilder(selected + 1)}\r\n            tabIndex=\"0\"\r\n            role=\"button\"\r\n            onKeyPress={this.handleNextPage}\r\n            aria-disabled={nextAriaDisabled}\r\n          >\r\n            {nextLabel}\r\n          </CustomNextLink>\r\n        </CustomNextButton>\r\n      </CustomContainer>\r\n      :\r\n      <ul className={containerClassName}>\r\n        <li className={previousClasses}>\r\n          <a\r\n            onClick={this.handlePreviousPage}\r\n            className={previousLinkClassName}\r\n            href={this.hrefBuilder(selected - 1)}\r\n            tabIndex=\"0\"\r\n            role=\"button\"\r\n            onKeyPress={this.handlePreviousPage}\r\n            aria-disabled={previousAriaDisabled}\r\n          >\r\n            {previousLabel}\r\n          </a>\r\n        </li>\r\n\r\n        {this.pagination()}\r\n\r\n        <li className={nextClasses}>\r\n          <a\r\n            onClick={this.handleNextPage}\r\n            className={nextLinkClassName}\r\n            href={this.hrefBuilder(selected + 1)}\r\n            tabIndex=\"0\"\r\n            role=\"button\"\r\n            onKeyPress={this.handleNextPage}\r\n            aria-disabled={nextAriaDisabled}\r\n          >\r\n            {nextLabel}\r\n          </a>\r\n        </li>\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n"]}