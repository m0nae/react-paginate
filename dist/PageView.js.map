{"version":3,"sources":["../react_components/PageView.js"],"names":["PageView","CustomPage","props","customPage","CustomPageLink","customPageLink","pageClassName","pageLinkClassName","onClick","href","ariaLabel","page","extraAriaContext","ariaCurrent","selected","activeClassName","activeLinkClassName","propTypes","PropTypes","element","func","isRequired","bool","string","number"],"mappings":"AAAA;;;;;;AAEA;;;;AACA;;;;;;AAEA,IAAMA,WAAW,SAAXA,QAAW,QAAS;AACxB,MAAIC,aAAaC,MAAMC,UAAvB;AACA,MAAIC,iBAAiBF,MAAMG,cAA3B;;AAEA,MAAIC,gBAAgBJ,MAAMI,aAA1B;AACA,MAAIC,oBAAoBL,MAAMK,iBAA9B;;AAEA,MAAMC,UAAUN,MAAMM,OAAtB;AACA,MAAMC,OAAOP,MAAMO,IAAnB;AACA,MAAIC,YACFR,MAAMQ,SAAN,IACA,UACER,MAAMS,IADR,IAEGT,MAAMU,gBAAN,GAAyB,MAAMV,MAAMU,gBAArC,GAAwD,EAF3D,CAFF;AAKA,MAAIC,cAAc,IAAlB;;AAEA,MAAIX,MAAMY,QAAV,EAAoB;AAClBD,kBAAc,MAAd;;AAEAH,gBACER,MAAMQ,SAAN,IAAmB,UAAUR,MAAMS,IAAhB,GAAuB,uBAD5C;;AAGA,QAAI,OAAOL,aAAP,KAAyB,WAA7B,EAA0C;AACxCA,sBAAgBA,gBAAgB,GAAhB,GAAsBJ,MAAMa,eAA5C;AACD,KAFD,MAEO;AACLT,sBAAgBJ,MAAMa,eAAtB;AACD;;AAED,QAAI,OAAOR,iBAAP,KAA6B,WAAjC,EAA8C;AAC5C,UAAI,OAAOL,MAAMc,mBAAb,KAAqC,WAAzC,EAAsD;AACpDT,4BAAoBA,oBAAoB,GAApB,GAA0BL,MAAMc,mBAApD;AACD;AACF,KAJD,MAIO;AACLT,0BAAoBL,MAAMc,mBAA1B;AACD;AACF;;AAED,SACEd,MAAMC,UAAN,GACA;AAAC,cAAD;AAAA;AACE;AAAC,oBAAD;AAAA;AACE,iBAASK,OADX;AAEE,cAAK,QAFP;AAGE,cAAMC,IAHR;AAIE,kBAAS,GAJX;AAKE,sBAAYC,SALd;AAME,wBAAcG,WANhB;AAOE,oBAAYL;AAPd;AASGN,YAAMS;AATT;AADF,GADA,GAeA;AAAA;AAAA,MAAI,WAAWL,aAAf;AACE;AAAA;AAAA;AACE,iBAASE,OADX;AAEE,cAAK,QAFP;AAGE,mBAAWD,iBAHb;AAIE,cAAME,IAJR;AAKE,kBAAS,GALX;AAME,sBAAYC,SANd;AAOE,wBAAcG,WAPhB;AAQE,oBAAYL;AARd;AAUGN,YAAMS;AAVT;AADF,GAhBF;AA+BD,CApED;;AAsEAX,SAASiB,SAAT,GAAqB;AACnBd,cAAYe,oBAAUC,OADH;AAEnBd,kBAAgBa,oBAAUC,OAFP;AAGnBX,WAASU,oBAAUE,IAAV,CAAeC,UAHL;AAInBP,YAAUI,oBAAUI,IAAV,CAAeD,UAJN;AAKnBf,iBAAeY,oBAAUK,MALN;AAMnBhB,qBAAmBW,oBAAUK,MANV;AAOnBR,mBAAiBG,oBAAUK,MAPR;AAQnBP,uBAAqBE,oBAAUK,MARZ;AASnBX,oBAAkBM,oBAAUK,MATT;AAUnBd,QAAMS,oBAAUK,MAVG;AAWnBb,aAAWQ,oBAAUK,MAXF;AAYnBZ,QAAMO,oBAAUM,MAAV,CAAiBH;AAZJ,CAArB;;kBAeerB,Q","file":"PageView.js","sourcesContent":["'use strict';\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst PageView = props => {\r\n  let CustomPage = props.customPage;\r\n  let CustomPageLink = props.customPageLink;\r\n\r\n  let pageClassName = props.pageClassName;\r\n  let pageLinkClassName = props.pageLinkClassName;\r\n\r\n  const onClick = props.onClick;\r\n  const href = props.href;\r\n  let ariaLabel =\r\n    props.ariaLabel ||\r\n    'Page ' +\r\n      props.page +\r\n      (props.extraAriaContext ? ' ' + props.extraAriaContext : '');\r\n  let ariaCurrent = null;\r\n\r\n  if (props.selected) {\r\n    ariaCurrent = 'page';\r\n\r\n    ariaLabel =\r\n      props.ariaLabel || 'Page ' + props.page + ' is your current page';\r\n\r\n    if (typeof pageClassName !== 'undefined') {\r\n      pageClassName = pageClassName + ' ' + props.activeClassName;\r\n    } else {\r\n      pageClassName = props.activeClassName;\r\n    }\r\n\r\n    if (typeof pageLinkClassName !== 'undefined') {\r\n      if (typeof props.activeLinkClassName !== 'undefined') {\r\n        pageLinkClassName = pageLinkClassName + ' ' + props.activeLinkClassName;\r\n      }\r\n    } else {\r\n      pageLinkClassName = props.activeLinkClassName;\r\n    }\r\n  }\r\n\r\n  return (\r\n    props.customPage ? \r\n    <CustomPage>\r\n      <CustomPageLink\r\n        onClick={onClick}\r\n        role=\"button\"\r\n        href={href}\r\n        tabIndex=\"0\"\r\n        aria-label={ariaLabel}\r\n        aria-current={ariaCurrent}\r\n        onKeyPress={onClick}\r\n      >\r\n        {props.page}\r\n      </CustomPageLink>\r\n    </CustomPage> \r\n    :\r\n    <li className={pageClassName}>\r\n      <a\r\n        onClick={onClick}\r\n        role=\"button\"\r\n        className={pageLinkClassName}\r\n        href={href}\r\n        tabIndex=\"0\"\r\n        aria-label={ariaLabel}\r\n        aria-current={ariaCurrent}\r\n        onKeyPress={onClick}\r\n      >\r\n        {props.page}\r\n      </a>\r\n    </li>\r\n  );\r\n};\r\n\r\nPageView.propTypes = {\r\n  customPage: PropTypes.element,\r\n  customPageLink: PropTypes.element,\r\n  onClick: PropTypes.func.isRequired,\r\n  selected: PropTypes.bool.isRequired,\r\n  pageClassName: PropTypes.string,\r\n  pageLinkClassName: PropTypes.string,\r\n  activeClassName: PropTypes.string,\r\n  activeLinkClassName: PropTypes.string,\r\n  extraAriaContext: PropTypes.string,\r\n  href: PropTypes.string,\r\n  ariaLabel: PropTypes.string,\r\n  page: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default PageView;\r\n"]}